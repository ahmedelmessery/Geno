
from django.shortcuts import render, redirect


def detection(request):
    return render(request, 'detection.html')


Diseased_lst = ['CAGGAGGGAGAAACCATCATGCTGAGGTGCCACAGCTGGAAGGACAAGCCTCTGGTCAAGGTCACATTCTTCCAGAATGGAAAATCCCAGAAATTCTCCCCTTTGGATCCCACCTTCTCCATCCCACAAGCAAACCACAGTCACAGTGGTGATTACCACTGCACAGGAAACATAGGCTACACGCTGTTCTCATCCAAGCCT',
                'CAGGAGGGAGAAACCATCATGCTGAGGTGCCACAGCTGGAAGGACAAGCCTCTGGTCAAGGTCACATTCTTCCAGAATGGAAAATCCCAGAAATTCTCCCGTTTGGATCCCACCTTCTCCATCCCACAAGCAAACCACAGTCACAGTGGTGATTACCACTGCACAGGAAACATAGGCTACACGCTGTTCTCATCCAAGCCT',
                'TCCTCCGCAGGAAGAGTCTCCTCGCCCCTGCTCCTGTCTCCCAAACTCTAGATGCCACGTGGGCGCTGTAGCCCCACTTCGCCAATGCCTTGGTTCGGGCTCTTCCTGAGACTCTCATTTTCCTAATTTCACTAACTTCACACCTTCTTGCTAATTCTGATTATTTTTCCTCTGCGATAGGGACTTCGCTCAATGGTGTTC',
                'GCCATGTTCCTTATATTTGGAGCAGGTGGTTCTGATTCCTCTTCCGGGGAATATTCTGGGATTGGTTTCAGCAACTGACTTGGGTATGGTTCTGATTCATAAACCTCCACAGGAATGCTTCGGTTCATTCTAGTTTCTGGAACAAGAGAAAACATGCTATAGCCTTAGAAGACAGATAAATTCTTGGAGTCCTCACTTTAT',
                'GCCATGTTCCTTATATTTGGAGCAGGTGGTTCTGATTCCTCTTCCGGGGAATATTCTGGGATTGGTTTCAGCAACTGACTTGGGTATGGTTCTGATTCATTAACCTCCACAGGAATGCTTCGGTTCATTCTAGTTTCTGGAACAAGAGAAAACATGCTATAGCCTTAGAAGACAGATAAATTCTTGGAGTCCTCACTTTAT',
                'GGGAAAGCTTTGCCCAGGCCTGGGTGTCTCCTGCAGAAACTGTCTTCACTGTCCTCCAGAACTTGAGTGCGCAGGCAGGTGACCTGCCGGGATACAGGCCACTGGTGATTTGCAAGTTTCAGGGTTGAGTGAGCTTGAGAAAAGTCTCCGGAGGAATTGTGAAGCATTGTGGGTGCAGACAAGCTGTTGGGTGCCATGTTC',
                'TTTCTCTACTGTTAATTACTTGAGTGTTTTCACGAAATTCACTTTTTTTTGTCCTAAATAAAAACATCTGCGAAATCACCAGTTTGGTATTCCAGCTGGAAAGCTCAAAAAACTTTTCAAAAAACTCTACACAGGCTCCTCTTTTCGTAAGATACTTAGGAAAATCCAACCATGAAGAACCTCTTTCACACCACCATTCCT',
                'TTTCTCTACTGTTAATTACTTGAGTGTTTTCACGAAATTCACTTTTTTTTGTCCTAAATAAAAACATCTGCGAAATCACCAGTTTGGTATTCCAGCTGGATAGCTCAAAAAACTTTTCAAAAAACTCTACACAGGCTCCTCTTTTCGTAAGATACTTAGGAAAATCCAACCATGAAGAACCTCTTTCACACCACCATTCCT',
                'TTACTCACATTTCCACATGGGAACTGGCACAGGTGGGGAGTGGGTAAAGGAGTCCAGCAGGCTGAATGCCTTCAACAATCATTTTACCACATGGTCCTCATTTACTCTCAGCTGCCTCATATGTGTCACCTCACAAGTAATCAAATAAAATGGGCATGTGGCTAAGCTTTGTAAATAGTGAAAACATGAATGTCAATTTTT',
                'GCCATGTTCCTTATATTTGGAGCAGGTGGTTCTGATTCCTCTTCCGGGGAATATTCTGGGATTGGTTTCAGCAACTGACTTGGGTATGGTTCTGATTCATAAACCTCCACAGGAATGCTTCGGTTCATTCTAGTTTCTGGAACAAGAGAAAACATGCTATAGCCTTAGAAGACAGATAAATTCTTGGAGTCCTCACTTTAT',
                'GCCATGTTCCTTATATTTGGAGCAGGTGGTTCTGATTCCTCTTCCGGGGAATATTCTGGGATTGGTTTCAGCAACTGACTTGGGTATGGTTCTGATTCATTAACCTCCACAGGAATGCTTCGGTTCATTCTAGTTTCTGGAACAAGAGAAAACATGCTATAGCCTTAGAAGACAGATAAATTCTTGGAGTCCTCACTTTAT',
                'CCTGGACTGCAAGGAGGGGTCTTTGCACCATCTCTGAAAAGCCGATGTGTATCCTCAGCTTTGAGAACTGAATTCCATGGGTTGTGTCAGTGTCAGACCTGTGAAATTCAGTTCTTCAGCTGGGATATCTCTGTCATCGTGGGCTTGAGGACCTGGAGAGAGTAGATCCTGAAGAACTTTTTCAGTCTGCTGAAGAGCTTG',
                'TCCCCTTTCCTTGACTCTACATCTAATTTATTTGGAAAGCATGTCAAGCTTACCTTCTTAATCCTTCTCTGGAGTCTATCCTATTCACATTGCTTCTACCGGCTGCCTGATCTGTGTTACCATGAGTCCTCTCTTGAACAATGGTCTGCTAAATTGGTTTCCCATTTCCAGTCTTGACTCCCTACAAGTGAGGCTTCACAT',
                'TCCCCTTTCCTTGACTCTACATCTAATTTATTTGGAAAGCATGTCAAGCTTACCTTCTTAATCCTTCTCTGGAGTCTATCCTATTCACATTGCTTCTACCTGCTGCCTGATCTGTGTTACCATGAGTCCTCTCTTGAACAATGGTCTGCTAAATTGGTTTCCCATTTCCAGTCTTGACTCCCTACAAGTGAGGCTTCACAT',
                'AAACACTCTGTATTATAAAGCTATTATCACATTCTGGGAGGGGTACCTTCTAGTACGTTAGTAAGGAATTCTACAGGAACAGGGTTTTTCCTATCCCACTTTATAACAGTTACCTGTTAAAAAAAAACTACCAGAGGATGCAGTGGAGCCTGCAGGGCAGACCTGACTGTGATGTTTGCTGTTTGCCACCCGTCCTTCCCC',
                'GGAAAGGAGATGAAAACGTTATATGTTTCAGTTGGTCAAAATGCTCTAATTTGATACTGAATATTGCAAATAAGGGATATTTAGGCATAGTTTTTTTTTTGAAATAAATTATCCACTGAAATGTATTAATATGATATAAACTTGGAAACTGATGTTTAAAAATTTTAAACTCTTAAGTCCAGACTTACTTTTACATGGCAC',
                'GGAAAGGAGATGAAAACGTTATATGTTTCAGTTGGTCAAAATGCTCTAATTTGATACTGAATATTGCAAATAAGGGATATTTAGGCATAGTTTTTTTTTTTAAATAAATTATCCACTGAAATGTATTAATATGATATAAACTTGGAAACTGATGTTTAAAAATTTTAAACTCTTAAGTCCAGACTTACTTTTACATGGCAC',
                'TTACTCACATTTCCACATGGGAACTGGCACAGGTGGGGAGTGGGTAAAGGAGTCCAGCAGGCTGAATGCCTTCAACAATCATTTTACCACATGGTCCTCATTTACTCTCAGCTGCCTCATATGTGTCACCTCACAAGTAATCAAATAAAATGGGCATGTGGCTAAGCTTTGTAAATAGTGAAAACATGAATGTCAATTTTT',
                'GTTTGTAATTAAAAAGCTACATGTATATTATGATCTACTTTATGGAAAATTACATGAGTGTGTATGCAGTAAAAGTATGAAAAGTTGGTGACCAAAATGTAAATAGTGGTTATCTTATTTCAGTGGAATTTCAGGGGATTTTTTTTCTTTCTTCTTAGACTTTTCATTATCATTTGACTTTTTACAAAGATTTGCATTATT',
                'GTTTGTAATTAAAAAGCTACATGTATATTATGATCTACTTTATGGAAAATTACATGAGTGTGTATGCAGTAAAAGTATGAAAAGTTGGTGACCAAAATGTGAATAGTGGTTATCTTATTTCAGTGGAATTTCAGGGGATTTTTTTTCTTTCTTCTTAGACTTTTCATTATCATTTGACTTTTTACAAAGATTTGCATTATT',
                'TTGATTGTAATTAACTTGGAGCTTGTTAATAATGAGAGTTTTCTTTCATTTTTTTCCACATGTCTACCAAATTCCAATAACATTTACTGAACATCTTATTTTTTTACCACTGCTCTGCTGGGCCAGCTCTGTCATAAATCAAGTGTTCCTTTGTGGGTGGGCTTGTTTCTGGACTCCATTCCATCTTATGGTTCTCTCTCT',
                'TTATGGTTTTCATATTTGATGTCAGAAAACTGAGAAATGTGTTAAAGTGTCCTACTACTGGTCATTTTTTTTTGTATTTATAATTTTTACTTTATATGTTCAGTTAATATTACTTGGTACATACTGACCCATGAGTGTTCAATTGAAATTGTCACTTTATAGTATTACAATATTTGTTCTGGTTATTGATTTTGGGCTGGA',
                'TTATGGTTTTCATATTTGATGTCAGAAAACTGAGAAATGTGTTAAAGTGTCCTACTACTGGTCATTTTTTTTTGTATTTATAATTTTTACTTTATATGTTTAGTTAATATTACTTGGTACATACTGACCCATGAGTGTTCAATTGAAATTGTCACTTTATAGTATTACAATATTTGTTCTGGTTATTGATTTTGGGCTGGA',
                'TCCTCTACCCAAAACCTTCCAATGGTTTCTCATTTCAAAATAAAAGCCAAAGCCTTTACATTGTTCTACCCACACCAAATTCATGAAGGGATGACACATAGAGTATGCAACCTATGCATGTTTGCTTGTTCTTTTTAAAAAGGTGGTCTTTACAGCTATAGACTCCTCTCTCCTGATTATGAGTACATCAGATTATCTTAA',
                'CTACTGGATATTATGATTTATAAAACTACAGGGATTGAACTGGAACCGGTCCAGGAATGGAAACCAGTCCCAGGGGTTTTGCAGGGGCTTAGAAGAGGCCAGGACACACTCGGGGGGGCAGGAGGCGCCTGTGGGGCAGGTCAGCTGGGGGCTGCTCACAGCACACACACGATGCCGGACGGAGTCAAGATCTCGGACTAG',
                'CTACTGGATATTATGATTTATAAAACTACAGGGATTGAACTGGAACCGGTCCAGGAATGGAAACCAGTCCCAGGGGTTTTGCAGGGGCTTAGAAGAGGCCCGGACACACTCGGGGGGGCAGGAGGCGCCTGTGGGGCAGGTCAGCTGGGGGCTGCTCACAGCACACACACGATGCCGGACGGAGTCAAGATCTCGGACTAG',
                'CTACTGGATATTATGATTTATAAAACTACAGGGATTGAACTGGAACCGGTCCAGGAATGGAAACCAGTCCCAGGGGTTTTGCAGGGGCTTAGAAGAGGCCGGGACACACTCGGGGGGGCAGGAGGCGCCTGTGGGGCAGGTCAGCTGGGGGCTGCTCACAGCACACACACGATGCCGGACGGAGTCAAGATCTCGGACTAG',
                'TAGACTGGGCCCCGCGCCCCCCAGGCACCTGCGGGCGGCGGGATGAAGACTGGAGTAGGGCGGGGTCCGCGTCCAGCTGCGCCTGGAAAGCGAGCTCGGGGGGGTGCCTACAGCAGGGTGCGCCCGGCCGGCCTGGGACTTCCAAAGCGCCTCCCACGCCCCGATCGGTTTGGGGTGCTGGCGCCCGGGGAGCCCAGTGAC',
                'TTTGATTTGGAACAGCAGTGGCAAGATCTCATGTCCATCATGGAAATGCAGGTAGGATTGTCGGAACCGGGCACAAACCTATTGGATTTTGCACAGATTGGCTTAGCACTCAGTTGCTTTTCCATCTCCAAGGAGAGAAAGTGTAATACTTTCCCTGAATCATAGAGAAGTGGGGACAATGAGAAGAAACCTGTCCAGGTG',
                'AGTCTGAAGGGTCTGTGGCATCAGGGCAGGGGCCTGCCCTTTCAACTCCATCCCCAGATGTCTATCAGGTACCAAAGGCTGCTTCCATAGCTAGTCTAGCCGAACCATTTCCGAGCTACAAGGCAGGAATGAAAGTAAAAACAAAGAAACACTGGTTAAATTTTAAAAATTTATTCTTTCTCTTTTGTTGCTGTTGATTT',
                'GTGGGTGGGTAGGGAGTACTAAATGAAACCTAAAATAAAGCCTGACTAAGTAAAGGAAACATTTGAGGCAAAAGACAAGATATGAAAACTTCACCAAAACAGTCTGAAATGACAAAGGGAAAAAGTCCCAACCTTAATCAGGGAAAGTTAGTTGCATCAATAAAGAAAAATAACCACACACGATACAATCAGGCAATTGAG',
                'GTGGGTGGGTAGGGAGTACTAAATGAAACCTAAAATAAAGCCTGACTAAGTAAAGGAAACATTTGAGGCAAAAGACAAGATATGAAAACTTCACCAAAACTGTCTGAAATGACAAAGGGAAAAAGTCCCAACCTTAATCAGGGAAAGTTAGTTGCATCAATAAAGAAAAATAACCACACACGATACAATCAGGCAATTGAG',
                'TATAAAGGGTTTTACCTCTTTTCACTTGGAGCATTCTTATTATTATAGGGTATTGTTTAAAATGTTTAATTGGAAAAAACAGGATTTCCTTGTTTTAACTGGCATTTATGTGATTACTAGGGAGATTGAACAGTTTTTCATATATGGATTGCTCACTTAGATTTTTAAAAAGCTTTCTTAGTTTATGCTCTTTGTCTTTAT',
                'TATAAAGGGTTTTACCTCTTTTCACTTGGAGCATTCTTATTATTATAGGGTATTGTTTAAAATGTTTAATTGGAAAAAACAGGATTTCCTTGTTTTAACTTGCATTTATGTGATTACTAGGGAGATTGAACAGTTTTTCATATATGGATTGCTCACTTAGATTTTTAAAAAGCTTTCTTAGTTTATGCTCTTTGTCTTTAT',
                'CACAGGGTGGTGGTTGGAGCCCCCCAGGAGATAGTGGCTGCCAACCAAAGGGGCAGCCTCTACCAGTGCGACTACAGCACAGGCTCATGCGAGCCCATCCACCTGCAGGGTGAGTCACTGCCCCGCCGGGCTGGGACTGGGATTCCCCTGTGAACACATAGGGACTTTCCAGGCACTCCTGTGTCCTGGGGATCTGTGGTG',
                'GATATCACCGCCTTTGCCTCCCCTGCCTTCCAGAACCAGCGCTCACAGCGATCCTGGCGCCTGGCCTGTGAGTCTGCCTCCTCCACCGAAGTGTCTGGGGTCTTGAAGAGCACCAGCTGCAGCATAAACCACCCCATCTTCCCGGAAAACTCAGAGGTCAGAACTCCTGGCTCCTCCCCTCCTTTTCTCTTTGATTTCTTT',
                'TCACCCATATCATGGCTTCAGAAAACTATTGCTTTTCTTACTAACTTATTTAAGGTTTCACTACATGAGTCAGTATGCAGAACTCACTATGTTGTAACTATGATCTGTAATGATAAAAATATAGAACCTCTTTGACTTTAATCTAAAAAAGTCACCTTATCATAAAACAGTGTTAACATAATCAAAAATTAACCCTGACAA',
                'TTTTTATAAGGGGTTTCCTCTTTTGCTTGGTTATTCTCTTGTCTACCACCATGTAAAACATCCCTTTGCTCTTCCTTCATCTTCTGCCATGATTGTGAGGCCTCCCTAGCCACGTGGAACTGTGAGTCAATTAAACCTCCTTCCTTTATAAATTACCCAGCCCTGGATATGTTTTATAATTTGGGAAAATGGACTAATACA',
                'CTGTGTTTGTACTGTGATAACTGGTGCTTGAAGGGAGGACATATAGTTACATGTTGCGGGAAAACACATGTCATTAGAAAACTTGGCATGATTTAGGGACAATTGCCTTTTCCATGGTAGATGTGGGACTCTCTGTCATCTTCACCTTGTTGTTCCAAGTGCAGAAGAGAAAGCTTCTTCCTGCTTTCAGCTGCGTGACTG',
                'CTGTGTTTGTACTGTGATAACTGGTGCTTGAAGGGAGGACATATAGTTACATGTTGCGGGAAAACACATGTCATTAGAAAACTTGGCATGATTTAGGGACGATTGCCTTTTCCATGGTAGATGTGGGACTCTCTGTCATCTTCACCTTGTTGTTCCAAGTGCAGAAGAGAAAGCTTCTTCCTGCTTTCAGCTGCGTGACTG']

diseased = 'Diseased'
not_diseased = 'Not Diseased'


def prediction(dna_sequence):
    if dna_sequence in Diseased_lst:
        return diseased
    else:
        return not_diseased


def geno_detection(request):
    try:
        if request.method == 'POST':
            dna_example = request.POST['dna_sequence']
            # dna_example = 'TCCTCCGCAGGAAGAGTCTCCTCGCCCCTGCTCCTGTCTCCCAAACTCTAGATGCCACGTGGGCGCTGTAGCCCCACTTCGCCAATGCCTTGGTTCGGGCGCTTCCTGAGACTCTCATTTTCCTAATTTCACTAACTTCACACCTTCTTGCTAATTCTGATTATTTTTCCTCTGCGATAGGGACTTCGCTCAATGGTGTTCTCCTCCGCAGGAAGAGTCTCCTCGCCCCTGCTCCTGTCTCCCAAACTCTAGATGCCACGTGGGCGCTGTAGCCCCACTTCGCCAATGCCTTGGTTCGGGCGCTTCCTGAGACTCTCATTTTCCTAATTTCACTAACTTCACACCTTCTTGCTAATTCTGATTATTTTTCCTCTGCGATAGGGACTTCGCTCAATGGTGTTC'
            # DNA = 'GCCATGTTCCTTATATTTGGAGCAGGTGGTTCTGATTCCTCTTCCGGGGAATATTCTGGGATTGGTTTCAGCAACTGACTTGGGTATGGTTCTGATTCATTAACCTCCACAGGAATGCTTCGGTTCATTCTAGTTTCTGGAACAAGAGAAAACATGCTATAGCCTTAGAAGACAGATAAATTCTTGGAGTCCTCACTTTAT'
            result = prediction(dna_example)
            return render(request, 'geno_detection.html', {'result': result})
        else:
            return render(request, 'detection.html')
    # except AttributeError:
    #     return 'Invalid DNA Sequence'
    # except FailedPreconditionError:
    #     return 'Invalid DNA Sequence'
    # except NameError:
    #     return 'Invalid DNA Sequence'
    except:
        return redirect('home')
